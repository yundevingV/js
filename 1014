#reduce함수 활용

array.reduce(callbackFunction(previousValue, currentValue, currentIndex, array1), initialValue);
#라는 구문을 가집니다.

#reduce함수는 매개변수로 callbackfunction와 initialValue를 가집니다.
#initialValue는 callbackfunction의 previousValue에 사용될 값입니다.

#previousValue 첫번째 인자 혹은 initialValue.
#currentValue는 현재 배열의 값.
#currentIndex는 현재 배열의 인덱스.

let array = ['apple','banana','circle'];
array.reduce(function(previousValue, currentValue,currentIndex,array1)
{
    console.log(previousValue);
    console.log(currentValue);
    console.log(currentIndex);
    console.log(array1);
})

#실행횟수가 2번 나옵니다. 
#initialValue가 없으면 previousValue가 첫번째 인자가 되어서 currentValue가
#두번째 인자부터 나타내주기때문입니다.
#그래서 콘솔창을 보면 apple이 나오고 그다음엔 prevoiousValue가 undefined가 나옵니다

let array = ['apple','banana','circle'];
array.reduce(function(previousValue, currentValue,currentIndex,array1)
{
    console.log(previousValue);
    console.log(currentValue);
    console.log(currentIndex);
    console.log(array1);
    

},1)

#initialValue를 아무거나 추가해주게되면 currentValue가
#첫번째인자가 되어 3번다 실행됩니다.

let array = ['apple','banana','circle'];
array.reduce(function(previousValue, currentValue,currentIndex,array1)
{
    console.log(previousValue);
    console.log(currentValue);
    console.log(currentIndex);
    console.log(array1);
    return previousValue=previousValue+1;

},1)

#밑에 return값을 매겨서 undifined를 없앨 수 있습니다.
